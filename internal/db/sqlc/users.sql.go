// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: users.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    role_id, 
    email,
    password_hash)
	VALUES ($1, $2, $3) RETURNING id, role_id, email, password_hash, created_at
`

type CreateUserParams struct {
	RoleID       uuid.UUID `json:"role_id"`
	Email        string    `json:"email"`
	PasswordHash []byte    `json:"password_hash"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.RoleID, arg.Email, arg.PasswordHash)
	var i User
	err := row.Scan(
		&i.ID,
		&i.RoleID,
		&i.Email,
		&i.PasswordHash,
		&i.CreatedAt,
	)
	return i, err
}
