// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

type Querier interface {
	ApproveRejectLeave(ctx context.Context, arg ApproveRejectLeaveParams) error
	CreateAnnouncement(ctx context.Context, arg CreateAnnouncementParams) error
	CreateContract(ctx context.Context, arg CreateContractParams) error
	CreateEmployee(ctx context.Context, arg CreateEmployeeParams) error
	CreateLeave(ctx context.Context, arg CreateLeaveParams) error
	CreatePayroll(ctx context.Context, arg CreatePayrollParams) error
	CreateToken(ctx context.Context, arg CreateTokenParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteAnnouncement(ctx context.Context, id uuid.UUID) error
	DeleteContract(ctx context.Context, id uuid.UUID) error
	DeleteEmployeeById(ctx context.Context, id uuid.UUID) error
	DeleteLeave(ctx context.Context, id uuid.UUID) error
	DeletePayroll(ctx context.Context, id uuid.UUID) error
	DeleteUserById(ctx context.Context, id uuid.UUID) error
	GetAllAApprovers(ctx context.Context) ([]GetAllAApproversRow, error)
	GetAllEmployees(ctx context.Context) ([]GetAllEmployeesRow, error)
	GetAllLeavesApproved(ctx context.Context) ([]GetAllLeavesApprovedRow, error)
	GetAllLeavesUnSeenTopBottomSeen(ctx context.Context) ([]GetAllLeavesUnSeenTopBottomSeenRow, error)
	GetAnnouncementById(ctx context.Context, id uuid.UUID) (Announcement, error)
	GetAnnouncementsFromDate(ctx context.Context, announcementDate time.Time) ([]GetAnnouncementsFromDateRow, error)
	GetContractById(ctx context.Context, id uuid.UUID) (Contract, error)
	GetContractsOfEmployeeByEmployeeId(ctx context.Context, id uuid.UUID) ([]GetContractsOfEmployeeByEmployeeIdRow, error)
	GetEmployeeById(ctx context.Context, id uuid.UUID) (Employee, error)
	GetEmployeeByIdDetailed(ctx context.Context, id uuid.UUID) (GetEmployeeByIdDetailedRow, error)
	GetEmployeesOnLeave(ctx context.Context) ([]GetEmployeesOnLeaveRow, error)
	GetEmployeesOnLeaveUpcoming(ctx context.Context) ([]GetEmployeesOnLeaveUpcomingRow, error)
	GetLeaveById(ctx context.Context, id uuid.UUID) (Leave, error)
	GetLeaveCountDistr(ctx context.Context) ([]GetLeaveCountDistrRow, error)
	GetLeavesByEmployeeId(ctx context.Context, employeeID uuid.UUID) ([]GetLeavesByEmployeeIdRow, error)
	GetPayroll(ctx context.Context, id uuid.UUID) (GetPayrollRow, error)
	GetPayrollByID(ctx context.Context, id uuid.UUID) (Payroll, error)
	GetRoleByName(ctx context.Context, name string) (uuid.UUID, error)
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	GetUserById(ctx context.Context, id uuid.UUID) (User, error)
	GetUserByToken(ctx context.Context, arg GetUserByTokenParams) (GetUserByTokenRow, error)
	IsEmployeeExisting(ctx context.Context, employeeID uuid.UUID) (bool, error)
	PresentAbsentEmployeeById(ctx context.Context, arg PresentAbsentEmployeeByIdParams) error
	UpdateAnnouncement(ctx context.Context, arg UpdateAnnouncementParams) error
	UpdateContract(ctx context.Context, arg UpdateContractParams) error
	UpdateEmployeeById(ctx context.Context, arg UpdateEmployeeByIdParams) error
	UpdateLeave(ctx context.Context, arg UpdateLeaveParams) error
	UpdatePayroll(ctx context.Context, arg UpdatePayrollParams) error
	UpdateUserById(ctx context.Context, arg UpdateUserByIdParams) error
}

var _ Querier = (*Queries)(nil)
